C51 COMPILER V9.60.0.0   MAIN                                                              07/30/2022 16:06:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\main.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(.\Device\Includ
                    -e;.\StdDriver\inc;.\Application) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <stdio.h>
   2          #include "MS51_16K.h"
   3          #include "ms51_pwm.h"
   4          
   5          static void ms51_gpio_config(void)
   6          {
   7   1         P00_PUSHPULL_MODE;
   8   1         P10_PUSHPULL_MODE;
   9   1         P00 = 0;
  10   1         P10 = 0;
  11   1      }
  12          static void ms51_adc_config(void)
  13          {
  14   1        /* Configuring channel*/
  15   1        P03_INPUT_MODE; // SPV_pin
  16   1        P04_INPUT_MODE; // Battery Pin
  17   1        P11_INPUT_MODE; // Load Pin
  18   1        P05_INPUT_MODE; // Temp Pin
  19   1        P30_INPUT_MODE; // Charging Pin
  20   1        P17_INPUT_MODE; // Discharging Pin
  21   1      
  22   1        ENABLE_ADC_CH4; // Temp
  23   1        ENABLE_ADC_CH5; // Battery Voltage
  24   1        ENABLE_ADC_CH6; // Solar Voltage
  25   1        ENABLE_ADC_CH7; // Load Voltage
  26   1        ENABLE_ADC_CH0; // Discharging Pin
  27   1        ENABLE_ADC_CH1; // Charging Pin
  28   1        /* configuring adc periph*/
  29   1        // ADCCON1 |= 0X30;   /* clock divider */
  30   1        // ADCCON2 |= 0X0E;   /* AQT time */
  31   1        // AUXR1 |= SET_BIT4; /* ADC clock low speed */
  32   1        set_ADCCON1_ADCEN;
  33   1        clr_ADCCON0_ADCF;
  34   1      }
  35          void PWM_DEAD_TIME_VALUE(unsigned int DeadTimeData)
  36          {
  37   1        unsigned char deadtmphigh, deadtmplow;
  38   1        deadtmplow = DeadTimeData;
  39   1        deadtmphigh = DeadTimeData >> 8;
  40   1        BIT_TMP = EA;
  41   1        EA = 0;
  42   1        if (deadtmphigh == 0x01)
  43   1        {
  44   2          TA = 0xAA;
  45   2          TA = 0x55;
  46   2          PDTEN |= 0x10;
  47   2        }
  48   1        TA = 0xAA;
  49   1        TA = 0x55;
  50   1        PDTCNT = deadtmplow;
  51   1        EA = BIT_TMP;
  52   1      }
  53          static void ms51_pwm_config(void)
  54          {
C51 COMPILER V9.60.0.0   MAIN                                                              07/30/2022 16:06:03 PAGE 2   

  55   1        PWM3_P00_OUTPUT_ENABLE;
  56   1        PWM2_P10_OUTPUT_ENABLE;
  57   1        /*use system clock for pwm*/
  58   1        PWM_CLOCK_FSYS;
  59   1        /*Clock is */
  60   1        PWM_CLOCK_DIV_2;
  61   1        /* pwm is in complementry mode*/
  62   1        PWM_COMPLEMENTARY_MODE;
  63   1        /* Enable Dead time controll on channel 0 and 1*/
  64   1        PWM23_DEADTIME_ENABLE;
  65   1        /* Insert the amount of dead time*/
  66   1        // Dead time       = 47 <PDTEN.4+PDTCNT[7:0]>/Fsys = 47/Fsys = 47/24000000 = 2 us (max value)
  67   1        PWM_DEAD_TIME_VALUE(47);
  68   1        /* Set PWM Period*/
  69   1        // PWM frequency   = Fpwm/((PWMPH,PWMPL)+1) = (16MHz/8)/(0x7CF+1) = 1KHz (1ms)
  70   1        // PWM0 high duty  = PWM0H,PMW0L = 0x03CF = 1/2 PWM period
  71   1        PWMPH = 0x02;
  72   1        PWMPL = 0x57;
  73   1      }
  74          static void ms51_uart_init(void)
  75          {
  76   1        //
  77   1      }
  78          void main(void)
  79          {
  80   1        // init cloack sys according to app
  81   1        MODIFY_HIRC(HIRC_24);
  82   1        ms51_gpio_config();
  83   1        // init adc
  84   1        ms51_adc_config();
  85   1        // init pwm
  86   1        ms51_pwm_config();
  87   1        //test 
  88   1        ms51_pwm_set_duty(50);
  89   1        ms51_pwm_start();
  90   1        while (1)
  91   1        {
  92   2      
  93   2        }
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    697    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
